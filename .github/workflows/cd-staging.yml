name: cd-staging
on:
  push:
    branches: [dev]

concurrency:
  group: deploy-staging
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  deployments: write

env:
  NAMESPACE: ecommerce
  IMAGE_FRONTEND: ecommerce-frontend
  IMAGE_BACKEND:  ecommerce-backend
  ACR_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER }}
  AKS_RESOURCE_GROUP: ${{ vars.AKS_RG }}
  AKS_CLUSTER: ${{ vars.AKS_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get AKS credentials
        run: az aks get-credentials -g "$AKS_RESOURCE_GROUP" -n "$AKS_CLUSTER" --overwrite-existing

      - name: Rollout images
        run: |
          kubectl -n $NAMESPACE set image deploy/frontend frontend=$ACR_LOGIN_SERVER/$IMAGE_FRONTEND:${{ github.sha }}
          kubectl -n $NAMESPACE set image deploy/backend  backend=$ACR_LOGIN_SERVER/$IMAGE_BACKEND:${{ github.sha }}
          kubectl -n $NAMESPACE rollout status deploy/frontend --timeout=180s
          kubectl -n $NAMESPACE rollout status deploy/backend  --timeout=180s
