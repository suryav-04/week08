name: Deploy
on:
  push:
    branches: [development, main]

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Azure Login
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Set AKS context
      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}

      # Step 4: Azure CLI sanity check (debug helper)
      - name: Verify Azure Account
        run: az account show

      # Step 5: Build & Push Backend
      - name: Build & Push Backend
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/backend:${{ github.sha }} ./backend
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/backend:${{ github.sha }}

      # Step 6: Build & Push Frontend
      - name: Build & Push Frontend
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/frontend:${{ github.sha }} ./frontend
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/frontend:${{ github.sha }}

      # Step 7: Deploy to AKS
      - name: Deploy to AKS
        run: |
          kubectl set image deployment/backend backend=${{ secrets.ACR_NAME }}.azurecr.io/backend:${{ github.sha }} -n shop || echo "Backend deploy skipped"
          kubectl set image deployment/frontend frontend=${{ secrets.ACR_NAME }}.azurecr.io/frontend:${{ github.sha }} -n shop || echo "Frontend deploy skipped"
          kubectl rollout status deployment/backend -n shop || true
          kubectl rollout status deployment/frontend -n shop || true
