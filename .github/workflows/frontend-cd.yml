name: CD - Deploy Frontend to AKS

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Optional: CI image tag to deploy (else manifests tag, e.g. :latest)'
        required: false
        default: ''

env:
  NS: shop
  ACR: ${{ secrets.ACR_LOGIN_SERVER }}
  SVC_FE: frontend-service-w08e1   # â¬… change if your Service name differs

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: v1.32.0

      # Write kubeconfig from either secret (gzip+base64 or plain base64)
      - name: Write kubeconfig and set KUBECONFIG
        env:
          KCFG_GZ: ${{ secrets.KUBE_CONFIG_GZ_B64 }}
          KCFG:    ${{ secrets.KUBE_CONFIG_B64 }}
        shell: bash
        run: |
          mkdir -p "$HOME/.kube"
          if [ -n "$KCFG_GZ" ]; then
            echo "$KCFG_GZ" | base64 -d | gunzip > "$HOME/.kube/config"
          elif [ -n "$KCFG" ]; then
            echo "$KCFG" | base64 -d > "$HOME/.kube/config"
          else
            echo "ERROR: Add KUBE_CONFIG_GZ_B64 or KUBE_CONFIG_B64 secret." >&2; exit 1
          fi
          chmod 600 "$HOME/.kube/config"
          echo "KUBECONFIG=$HOME/.kube/config" >> "$GITHUB_ENV"

      - name: Ensure namespace exists
        run: kubectl get ns "$NS" || kubectl create ns "$NS"

      # Apply your frontend k8s files (adjust filenames if yours differ)
      - name: Apply frontend manifests
        run: |
          kubectl apply -f k8s/frontend-deployment.yaml -n "$NS" || kubectl apply -f k8s/frontend.yaml -n "$NS"
          kubectl apply -f k8s/frontend-service.yaml    -n "$NS" || true

      # Optionally pin image to the CI tag
      - name: Pin image tag (optional)
        if: ${{ github.event.inputs.image_tag != '' }}
        env:
          TAG: ${{ github.event.inputs.image_tag }}
        run: |
          kubectl set image deploy/frontend frontend=$ACR/frontend:$TAG -n "$NS"

      - name: Wait for rollout & show resources
        run: |
          kubectl rollout status deploy/frontend -n "$NS" --timeout=180s || true
          kubectl get deploy,svc,pods -n "$NS"

      - name: Wait for Frontend LoadBalancer address
        shell: bash
        run: |
          for i in $(seq 1 60); do
            echo "Attempt $i/60..."
            FE=$(kubectl get svc "$SVC_FE" -n "$NS" -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
            [ -z "$FE" ] && FE=$(kubectl get svc "$SVC_FE" -n "$NS" -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
            [ -n "$FE" ] && break
            sleep 5
          done
          test -n "$FE"
          echo "FRONTEND_ADDR=$FE" >> $GITHUB_ENV
          echo "Frontend address: $FE"
